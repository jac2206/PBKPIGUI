
@{
    ViewBag.Title = "Variables";
}

<div id="content">

    <h2>Tendencia</h2>
    <div class="box configPanel">


        @(Html.Kendo().DatePicker()
                                                                                               .Name("Fecha")
                                                                                               .Value(DateTime.Now.AddHours(-5))
                                                                                               .Format("yyyy-MM-dd")


        )



        @(Html.Kendo().Button()
                                                                                                                                                                                           .Name("refreshButton")
                                                                                                                                                                                           .Icon("refresh")
                                                                                                                                                                                           .Content("Refresh Button")
                                                                                                                                                                                           .HtmlAttributes(new { type = "button" })
                .Events(ev => ev.Click("refresh"))
        )

    </div>

    <div>

        @(Html.Kendo().StockChart<PBIoT.GUI.Models.uspObtenerVariablePLCGraficaXMinuto_Result>
                                                                                              ()
                                                                                              .Name("GraficaTendenciaVariables")
                                                                                              .Title("TENDENCIA VARIABLE")
                                                                                              .Legend(legend => legend
                                                                                              .Visible(true)
                                                                                              )
                                                                                              //.Title("The Boeing Company \n (NYSE:BA)")
                                                                                              .DataSource(ds => ds.Read(read => read
                                                                                              .Action("usp_ObtenerGreaficaVariablesXMinuto", "GraficarVariables").Data("additionalData")
                                                                                              ))
                                                                                              .Transitions(true)
                                                                                              .DateField("FechaHora")
                                                                                              .CategoryAxis(axis => axis
                                                                                              .Labels(labels => labels
                                                                                              .Rotation(-45)
                                                                                              //.Color("white")
                                                                                              )
                                                                                              //.Date()
                                                                                              //.BaseUnit(ChartAxisBaseUnit.Minutes)
                                                                                              )
                                                                                              //.ChartArea(area => area.Background("#191e29"))
                                                                                              .ValueAxis(axis => axis.Numeric("valueAxis")
                                                                                              .Labels(l => l
                                                                                              .Format("{0}")
                                                                                              .Color("white")))

                                                                                              .Tooltip(tooltip => tooltip.Format("{0}"))
                                                                                              //.Series(series =>
                                                                                              //{
                                                                                              //    series.Line(model => model.Flujo).Color("red")
                                                                                              //         .Labels(labels => labels
                                                                                              //         .Format("{0}")
                                                                                              //         .Visible(true)
                                                                                              //         //.Color("white")
                                                                                              //         //.Background("#191e29")
                                                                                              //         );


                                                                                              //})

                                                                                              .Series(series =>
                                                                                              series.Line("Temperatura", "FechaHora").Name("Temperatura").Color("#DF0101")
                                                                                              //.Notes(notes => notes.Label(label => label.Position(ChartNoteLabelPosition.Outside)).Position(ChartNotePosition.Bottom))
                                                                                              .Labels(labels => labels
                                                                                              //.Template("#= value#")
                                                                                              .Background("transparent")
                                                                                              .Visible(true)
                                                                                              .Format("{0}")
                                                                                              )
                                                                                              )
                                                                                               .Series(series =>
                                                                                              series.Line("HR", "FechaHora").Name("Humedad Relativa").Color("#0B610B")
                                                                                              //.Notes(notes => notes.Label(label => label.Position(ChartNoteLabelPosition.Outside)).Position(ChartNotePosition.Bottom))
                                                                                              .Labels(labels => labels
                                                                                              //.Template("#= value#")
                                                                                              .Background("transparent")
                                                                                              .Visible(true)
                                                                                              .Format("{0}")
                                                                                              )
                                                                                              )

                                                                                              .Navigator(nav => nav
                                                                                              .Series(series =>
                                                                                              {
                                                                                                  series.Area(s => s.FechaHora).Color("C8102E");
                                                                                              })

                                                                                              .CategoryAxis(axis => axis
                                                                                              .Date()
                                                                                              .BaseUnit(ChartAxisBaseUnit.Minutes)
                                                                                              .Labels(l => l.Color("white"))
                                                                                              )
                                                                                              //.Select(
                                                                                              //DateTime.Parse(DateTime.Now.AddHours(-5).AddMinutes(-10).ToString("yyyy-MM-dd HH:mm:ss.fff")),
                                                                                              //DateTime.Parse(DateTime.Now.AddHours(-5).ToString("yyyy-MM-dd HH:mm:ss.fff"))
                                                                                              //)
                                                                                              //.Select(Convert.ToDateTime(DateTime.Now.AddMinutes(-5).ToString("yyyy-MM-dd HH:mm:ss.fff")), Convert.ToDateTime(DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff")))
                                                                                              //.Select(Convert.ToDateTime(DateTime.Now.AddMinutes(-10).ToString("yyyy-MM-dd HH:mm:ss.fff")), Convert.ToDateTime(DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss.fff")))
                                                                                              //.Select(DateTime.Now.AddDays(-1), DateTime.Now)
                                                                                              //.Select(DateTime.Now.AddDays(-1), DateTime.Now)
                                                                                              )

                                                                                              .ValueAxis(axis => axis.Numeric()
                                                                                              .Labels(labels => labels.Format("{0}"))
                                                                                              .Line(lines => lines.Visible(false))
                                                                                              //.MajorUnit(100)
                                                                                              //.Line(line => line.Visible(false))
                                                                                              // .MinorGridLines(lines => lines.Visible(true))
                                                                                              )
                                                                                              .Tooltip(tooltip => tooltip
                                                                                              .Visible(true)
                                                                                              .Shared(true)
                                                                                              .Template("#= series.name #: #= value #")
                                                                                              .Format("{0}")
                                                                                              )
        )
    </div>

</div>

<script>

    function additionalData() {
        //var a = $("#Ref").data("kendoDropDownList").filterInput.val();
        //alert(a);
        return {
            fecha: document.getElementById("Fecha").value,
            //fechaFin: document.getElementById("FechaFin").value,
            //valorTendencia: $("#Tendencia").data("kendoDropDownList").value()

        };
    }

</script>

<script type="text/javascript">

    function refresh() {
        try {


            $("#GraficaTendenciaVariables").data("kendoStockChart").dataSource.read();
            //var fecha = document.getElementById("Fecha").value;
            //var chart = $("#GraficaTendenciaFlujo").getKendoStockChart();
            //chart._navigator.options.select.from = new Date("2020-01-01 00:00:00.000");
            //chart._navigator.options.select.to = new Date(fecha);

        } catch (ex) {
            alert(ex);
        }

    }

    function ajaxCallFailed(response) {
        alert("Ajax call Failed ");
    }

</script>